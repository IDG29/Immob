#! /usr/bin/env python
# -*- coding: utf-8 -*-

'''This script will generate the complete JSONSchema for 
all the PELE schemas -which usually are not complete- 
and have "@someRef@" statements in order to include other schemas.
In order to use it, run the script from the Documentation directory.
The complete schemas will be written (overwriting if needed) to
the JSONSchemas/Autogenerated/ directory.

@copyright: Copyright 2010-2015 BARCELONA SUPERCOMPUTING CENTER. See the COPYRIGHT file at the top-level directory of this distribution.
'''

import os
import subprocess
import sys

# path to the schema generation script from the JSONSchemas/ directory
SCHEMA_GENERATION_SCRIPT = "../../scripts/schemas/generateSchema.py"

# path to JSONSchemas directory from the Documentation/ directory
JSON_SCHEMAS_PATH = "JSONSchemas"

# Schema files to convert (relative to JSON_SCHEMAS_PATH)
COMMAND_SCHEMAS = ["ANMCommand", 
                   "EnergyComputation", 
                   "Initialization", 
                   "Minimization",
                   "PELESimulation", 
                   "SideChainCommand"]

def main():
    # Check script exists
    script_path_from_cwd = os.path.join(JSON_SCHEMAS_PATH,
                                       SCHEMA_GENERATION_SCRIPT) 
    if not os.path.exists(script_path_from_cwd):
        print >>sys.stderr, "Could not find schema generation script '%s'" \
            % script_path_from_cwd
        sys.exit(1)

    # Check schemas directory exists    
    if not os.path.exists(JSON_SCHEMAS_PATH):
        print >>sys.stderr, "Could not find schemas directory: '%s'" \
            % JSON_SCHEMAS_PATH
        sys.exit(1)
    
    
    # execute the schema Script
    # abort execution if any of the conversions fail
    for schema_file in COMMAND_SCHEMAS:
        print "Generating full schema for %s ..." % schema_file
        if 0 != subprocess.call([sys.executable, SCHEMA_GENERATION_SCRIPT, 
                                 schema_file],
                        cwd=JSON_SCHEMAS_PATH):
            print >>sys.stderr,\
                "Error generating schema for %s. Exiting" % schema_file
            sys.exit(1)

    print "Files successfully generated."
    
if __name__ == "__main__":
    main()
